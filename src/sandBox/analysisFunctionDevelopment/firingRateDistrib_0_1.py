# A. Lonsberry
# May 2016
# (Using python 3.4.4, and brian2 2.0rc)
#
# DESCRIPTION
#   Here test a function/method that produces a smooth firing rate approximation of neuron spike output.
#
#   Here we will show how methods for looking at the firing rate of a single neuron over time. These methods are
#   enumerated in firingRateDistrib_0_0.py, but are called and tested in this file.
#
#   Using data that has been saved (perhaps saved in "savedData_0/" and generated by "createData_0_0.py") here we will
#   demonstrate some ways to look at firing rate statistics.

import matplotlib.pyplot as plt
import numpy
from firingRateDistrib_0_0 import instant_firing_rate
import pickle

########################################################################################################################
# TESTING INSTANTANEOUS FIRING RATE FUNCTION
########################################################################################################################

# In the first test we will simply create some fake neuron output a specific frequency.
# staticFiringPattern = numpy.linspace(start=.1, stop=5.0, num=100)
# smoothedRate = instant_firing_rate(spikeTrain=staticFiringPattern, startTime=0.0, endTime=5.0, filterLength=2.0, var=1.)
# plt.figure(1)
# plt.plot(smoothedRate[1],smoothedRate[0])


# In the second test we will load some data that we have created in simulation and see what it looks like
# Input spike times
inputFile = open("savedData_0/netOutput0_PoiNeu_SpikesTimes.pkl","rb")
spikeTimes = pickle.load(inputFile)
spikeTimesUnits = pickle.load(inputFile)
inputFile.close()

# Input spike times indices,
inputFile = open("savedData_0/netOutput0_PoiNeu_SpikesInds.pkl","rb")
spikeTimeInds = pickle.load(inputFile)
inputFile.close()

# Find the spike times for a particular neuron
neuronSpikeTimes = spikeTimes[spikeTimeInds==99]
# Now find the firing rate
smoothedRate = instant_firing_rate(spikeTrain=neuronSpikeTimes, startTime=0.0, endTime=10.0, filterLength=5.0, var=1.)
plt.figure(2)
plt.plot(smoothedRate[1],smoothedRate[0])
plt.show()

